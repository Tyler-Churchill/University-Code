\hypertarget{classEntity}{
\section{Entity Class Reference}
\label{classEntity}\index{Entity@{Entity}}
}


\hyperlink{classEntity}{Entity} class.  


{\ttfamily \#include $<$Entity.h$>$}Inheritance diagram for Entity::\begin{figure}[H]
\begin{center}
\leavevmode
\includegraphics[height=1.50943cm]{classEntity}
\end{center}
\end{figure}
\subsection*{Public Member Functions}
\begin{DoxyCompactItemize}
\item 
virtual bool \hyperlink{classEntity_ad298df1b08eb4dae3883d0f7d594f27e}{attack} (\hyperlink{classEntity}{Entity} \&entity)=0
\begin{DoxyCompactList}\small\item\em Attacks the given entity. \item\end{DoxyCompactList}\item 
virtual bool \hyperlink{classEntity_a0c67d5136d2c945e0911bd547d766586}{isAlive} ()=0
\begin{DoxyCompactList}\small\item\em Returns true if the entity is alive, false if dead. \item\end{DoxyCompactList}\item 
virtual void \hyperlink{classEntity_ac6b4b264ad1bbf6bd9251ae01787947f}{getLoot} (\hyperlink{classEntity}{Entity} \&entity)=0
\begin{DoxyCompactList}\small\item\em Updates the entity so that it can make decisions per turn. \item\end{DoxyCompactList}\item 
virtual bool \hyperlink{classEntity_aaac21381e4a788de507e706ce8d188c1}{hasLoot} ()=0
\begin{DoxyCompactList}\small\item\em Returns true if the entity has items in their inventory, false otherwise. \item\end{DoxyCompactList}\item 
std::vector$<$ \hyperlink{classItem}{Item} $\ast$ $>$ \& \hyperlink{classEntity_adad1f1ed0e43e3b246abd8019284ebbe}{getInventory} ()
\begin{DoxyCompactList}\small\item\em Returns the entity's inventory of items. \item\end{DoxyCompactList}\item 
\hyperlink{classAttributes}{Attributes} \& \hyperlink{classEntity_add6dc404d771e891f8d962a62428fa96}{getAttributes} ()
\begin{DoxyCompactList}\small\item\em Returns the entity's \hyperlink{classAttributes}{Attributes} object. \item\end{DoxyCompactList}\item 
\hypertarget{classEntity_a6f424c0b5c2eb51842782007cb067755}{
void {\bfseries setAttributes} (\hyperlink{classAttributes}{Attributes} x)}
\label{classEntity_a6f424c0b5c2eb51842782007cb067755}

\item 
void \hyperlink{classEntity_a3608bb0df20cfbd68c8744600b3cc9bb}{setInventory} (std::vector$<$ \hyperlink{classItem}{Item} $\ast$ $>$ x)
\begin{DoxyCompactList}\small\item\em Sets the attribute abject to another attribute object. \item\end{DoxyCompactList}\item 
void \hyperlink{classEntity_a4c3ecf926db07c4c7abe8454b79fb125}{setName} (std::string \&y)
\begin{DoxyCompactList}\small\item\em Sets the name of the \hyperlink{classEntity}{Entity}. \item\end{DoxyCompactList}\item 
std::string \hyperlink{classEntity_ab824e4f163924eb4f136d3e2ff759897}{getName} ()
\begin{DoxyCompactList}\small\item\em Gets the name of the \hyperlink{classEntity}{Entity}. \item\end{DoxyCompactList}\end{DoxyCompactItemize}


\subsection{Detailed Description}
\hyperlink{classEntity}{Entity} class. 

\subsection{Member Function Documentation}
\hypertarget{classEntity_ad298df1b08eb4dae3883d0f7d594f27e}{
\index{Entity@{Entity}!attack@{attack}}
\index{attack@{attack}!Entity@{Entity}}
\subsubsection[{attack}]{\setlength{\rightskip}{0pt plus 5cm}virtual bool Entity::attack ({\bf Entity} \& {\em entity})\hspace{0.3cm}{\ttfamily  \mbox{[}pure virtual\mbox{]}}}}
\label{classEntity_ad298df1b08eb4dae3883d0f7d594f27e}


Attacks the given entity. 
\begin{DoxyParams}{Parameters}
\item[\mbox{$\leftarrow$} {\em entity,a}]reference to the entity that will be attacked \end{DoxyParams}
\hypertarget{classEntity_add6dc404d771e891f8d962a62428fa96}{
\index{Entity@{Entity}!getAttributes@{getAttributes}}
\index{getAttributes@{getAttributes}!Entity@{Entity}}
\subsubsection[{getAttributes}]{\setlength{\rightskip}{0pt plus 5cm}{\bf Attributes}\& Entity::getAttributes ()\hspace{0.3cm}{\ttfamily  \mbox{[}inline\mbox{]}}}}
\label{classEntity_add6dc404d771e891f8d962a62428fa96}


Returns the entity's \hyperlink{classAttributes}{Attributes} object. \begin{DoxyReturn}{Returns}
Retuns a referance the entitys \hyperlink{classAttributes}{Attributes} object 
\end{DoxyReturn}
\hypertarget{classEntity_adad1f1ed0e43e3b246abd8019284ebbe}{
\index{Entity@{Entity}!getInventory@{getInventory}}
\index{getInventory@{getInventory}!Entity@{Entity}}
\subsubsection[{getInventory}]{\setlength{\rightskip}{0pt plus 5cm}std::vector$<${\bf Item}$\ast$$>$\& Entity::getInventory ()\hspace{0.3cm}{\ttfamily  \mbox{[}inline\mbox{]}}}}
\label{classEntity_adad1f1ed0e43e3b246abd8019284ebbe}


Returns the entity's inventory of items. \begin{DoxyReturn}{Returns}
Retuns a vector of items that the entity owns 
\end{DoxyReturn}
\hypertarget{classEntity_ac6b4b264ad1bbf6bd9251ae01787947f}{
\index{Entity@{Entity}!getLoot@{getLoot}}
\index{getLoot@{getLoot}!Entity@{Entity}}
\subsubsection[{getLoot}]{\setlength{\rightskip}{0pt plus 5cm}virtual void Entity::getLoot ({\bf Entity} \& {\em entity})\hspace{0.3cm}{\ttfamily  \mbox{[}pure virtual\mbox{]}}}}
\label{classEntity_ac6b4b264ad1bbf6bd9251ae01787947f}


Updates the entity so that it can make decisions per turn. \begin{DoxyReturn}{Returns}
Returns void Gives the loot from the entity to the given entity (transfers inventory to the referenced entity) 
\end{DoxyReturn}

\begin{DoxyParams}{Parameters}
\item[\mbox{$\leftarrow$} {\em entity,transfers}]the inventory from the given entity to the current entity \end{DoxyParams}
\begin{DoxyReturn}{Returns}
Returns void 
\end{DoxyReturn}
\hypertarget{classEntity_ab824e4f163924eb4f136d3e2ff759897}{
\index{Entity@{Entity}!getName@{getName}}
\index{getName@{getName}!Entity@{Entity}}
\subsubsection[{getName}]{\setlength{\rightskip}{0pt plus 5cm}std::string Entity::getName ()\hspace{0.3cm}{\ttfamily  \mbox{[}inline\mbox{]}}}}
\label{classEntity_ab824e4f163924eb4f136d3e2ff759897}


Gets the name of the \hyperlink{classEntity}{Entity}. \begin{DoxyReturn}{Returns}
Name of the \hyperlink{classEntity}{Entity} 
\end{DoxyReturn}
\hypertarget{classEntity_aaac21381e4a788de507e706ce8d188c1}{
\index{Entity@{Entity}!hasLoot@{hasLoot}}
\index{hasLoot@{hasLoot}!Entity@{Entity}}
\subsubsection[{hasLoot}]{\setlength{\rightskip}{0pt plus 5cm}virtual bool Entity::hasLoot ()\hspace{0.3cm}{\ttfamily  \mbox{[}pure virtual\mbox{]}}}}
\label{classEntity_aaac21381e4a788de507e706ce8d188c1}


Returns true if the entity has items in their inventory, false otherwise. \begin{DoxyReturn}{Returns}
Returns void 
\end{DoxyReturn}


Implemented in \hyperlink{classEntityBat_aa278c0fe99f11969de027f188ff0216d}{EntityBat}, \hyperlink{classEntityContainer_aa6dc3c46009f7647eb68a8d8d005f94a}{EntityContainer}, \hyperlink{classEntityDragon_ab5d8e57904380d562f0eab2241fc881e}{EntityDragon}, \hyperlink{classEntityPlayer_aeb8c83961d428214a12d4becbb225da9}{EntityPlayer}, \hyperlink{classEntitySkeleton_a4044916cdb1d225542600f355018416b}{EntitySkeleton}, \hyperlink{classEntitySpider_a3df1dba43521c84cfb50cd5f0c3abd67}{EntitySpider}, and \hyperlink{classEntityTroll_ad661d7dcbe670dfbcbe826ff5a885aa4}{EntityTroll}.\hypertarget{classEntity_a0c67d5136d2c945e0911bd547d766586}{
\index{Entity@{Entity}!isAlive@{isAlive}}
\index{isAlive@{isAlive}!Entity@{Entity}}
\subsubsection[{isAlive}]{\setlength{\rightskip}{0pt plus 5cm}virtual bool Entity::isAlive ()\hspace{0.3cm}{\ttfamily  \mbox{[}pure virtual\mbox{]}}}}
\label{classEntity_a0c67d5136d2c945e0911bd547d766586}


Returns true if the entity is alive, false if dead. \begin{DoxyReturn}{Returns}
Returns true if the entity is alive, false if dead 
\end{DoxyReturn}


Implemented in \hyperlink{classEntityBat_a4b57a0f468d2a1c78b0d4dc5a752778e}{EntityBat}, \hyperlink{classEntityDragon_af75ac2b198040224fd226d4578a16d59}{EntityDragon}, \hyperlink{classEntityPlayer_a5b942df30491223986084c3ce1f65757}{EntityPlayer}, \hyperlink{classEntitySkeleton_aca37e505856dc81157069df6572971f6}{EntitySkeleton}, \hyperlink{classEntitySpider_afcdcadef8e129a3ef4c4bf883c237065}{EntitySpider}, and \hyperlink{classEntityTroll_ae35a6687d815bacb01c1968819834a62}{EntityTroll}.\hypertarget{classEntity_a3608bb0df20cfbd68c8744600b3cc9bb}{
\index{Entity@{Entity}!setInventory@{setInventory}}
\index{setInventory@{setInventory}!Entity@{Entity}}
\subsubsection[{setInventory}]{\setlength{\rightskip}{0pt plus 5cm}void Entity::setInventory (std::vector$<$ {\bf Item} $\ast$ $>$ {\em x})\hspace{0.3cm}{\ttfamily  \mbox{[}inline\mbox{]}}}}
\label{classEntity_a3608bb0df20cfbd68c8744600b3cc9bb}


Sets the attribute abject to another attribute object. 
\begin{DoxyParams}{Parameters}
\item[\mbox{$\leftarrow$} {\em Attribbutes}]to set \end{DoxyParams}
\hypertarget{classEntity_a4c3ecf926db07c4c7abe8454b79fb125}{
\index{Entity@{Entity}!setName@{setName}}
\index{setName@{setName}!Entity@{Entity}}
\subsubsection[{setName}]{\setlength{\rightskip}{0pt plus 5cm}void Entity::setName (std::string \& {\em y})\hspace{0.3cm}{\ttfamily  \mbox{[}inline\mbox{]}}}}
\label{classEntity_a4c3ecf926db07c4c7abe8454b79fb125}


Sets the name of the \hyperlink{classEntity}{Entity}. 
\begin{DoxyParams}{Parameters}
\item[\mbox{$\leftarrow$} {\em Name}]to set to \end{DoxyParams}


The documentation for this class was generated from the following file:\begin{DoxyCompactItemize}
\item 
Entity.h\end{DoxyCompactItemize}
